       /*
     * 
     * 
     * Positions          1             2               3           4           5       6           7           8
     * Values             0             1               2           3           4       5           6           7
       bitStrings 1)   00000000      00000001       00000010    000000100    00000101 00000110  00000111     00001000 (64bits)
       
        2) Values         8+1           8+2             8+3          8+4         8+5     8+6    8+7         8+8
     *                 00001001      00001010       00001011   00001100     00001101 00001101  0000111      00010000

       3) Values        8+8+1          8+8+2       8+8+3       8+8+4          8+8+5    8+8+6   8+8+7       8+8+8
                       00010001      00010010       00010011   00010100     00010101  00010110 00010111     00011000
     
      
       16+2
      
      
      29)           8*28 + 1 225   
                       11100001
                       
    30)             8*29+1 233
    
    32)             8*31 + 1 249
        
         required : 8ints 32 bytes
            
                    8*32 (256)
                    
               
               trying 256 * 256
               {0,1,2,3,4,5,6,7,8}              * 256    {0,1,2,3,4,5,6,7,8}
               
               0000 0000 , 0000 0001, 0000 00002
               0001 0000 , 0001 0001, 0001 00002
               0002 0000 , 0002 0001, 0002 00002
               
               
               
               
               
                                 8*3 = 24 comb so far (only with 1) 2) and 3))
                                 
                                 2^8 = 256 needed combs
                                 
                                 
                                 Pos 1 = ,0,1,9,17,25,33,41,49,57,65,73,81,89,97,105
                                 
                                 Pos 2 = ,0,2,10,18,26,34,42,50,58,66,74,82,90,98,106 (all evens)
                                 
                                 Pos 3 = ,0,3,11,19,27,35,43,51,59,67,75,83,91,99,107,115,123,
                                 
                                 Pos 4 = ,0,4,12,20,28,36,44,52,60,68,76,84,92,100,108,116
                                   
                                 Pos 5 = ,0,5,13,21,29,37,45,53,61,69,77,85,93,101,109,117
                                 
                                 Pos 6 = ,0,6,14,22,30,38,46,54,62,70,78,86,94,102,110,118
                                
                                 Pos 7 = ,0,7,15,23,31,39,47,55,63,71,79,87,95,103,111,119,
                                 
                                 Pos 8 = ,0,8,16,24,32,40,48,56,64,72,80,88,96,104,112,120,128,136
                                 
                                 
                                 o algoritmo e igual para cada posiÃ§ao , mas tem de se comeÃ§ar com um valor a mais no ciclo
                                 
                                 
                                 visto que alguns valores sao repetidos tomar partido disso
    aes 128, 192 e 256 bits (chave)
   256 -> 32 bytes
   32/4 = 8 ints
      unsigned long // 8 bytes  +  18,446,744,073,709,551,615] 
     unsigned int 4294967296
