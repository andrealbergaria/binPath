
 * // All values that compose all numbers are
                {0,1,2,3,4,8,16,32,48} using 6 bits
            
                 * 
                 * 
                 * For 4 bits , needs
                 * 3,5,6,7
                 * 
                 * 
                 * For 5 bits, bits needed 
                 * 3,5,6,7,9,10,11,12,13,14,15
                 *
                 *
                 *  For 6 bits needs
                 * 3,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
                 *  
                 * 
                 *  Trying to find seq of numbers not already taken
                 
                
                sequence of numbers not to be filled  a) 3,5,6,7
                12,10,9 => Numbers reverse from previous sequence a)
                
               
                
              
           
                
                    
                        exemplo) reduzir de 2 bytes para 1 byte
                                        65536  256
                  
                  2byte = 1byte with 2 byte has leading one's
                  
                  reverse the binary number wich begins with ones to further count
                  
                  			2 byte		1byte
                  			0 			
                  			0
                  			0
                  			0
                  			10000000
                  			10000001
                  			10000010
                  			1
                  			1
                  			
                  			For 2 bytes
            		0
            		
            		1		can revert binary numbers ( 0->1 , 1->0 , 0-> 1 , or just set the bits with leading ones those belong to second byte)
            				If leading zeros, then second byte = first byte
            		0
            		
            		1
            		
      					For 3 bytes (so reverting, cant be sequential...not using)
      					
      				0
      				
      				0
      				
      				1
      				
      				1
      				
      				0 
      				 
      				0 
      				
      				1 
      				
      				1	
      			
      				Assign last byte to next 
        
                
      
            
                
                   
           

        

            
            
            
