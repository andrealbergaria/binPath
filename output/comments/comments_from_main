
 * // All values that compose all numbers are
                {0,1,2,3,4,8,16,32,48} using 6 bits
            
                 * 
                 * 
                 * For 4 bits , needs
                 * 3,5,6,7
                 * 
                 * 
                 * For 5 bits, bits needed 
                 * 3,5,6,7,9,10,11,12,13,14,15
                 *
                 *
                 *  For 6 bits needs
                 * 3,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
                 *  
                 * 
                 *  Trying to find seq of numbers not already taken
                 
                
                sequence of numbers not to be filled  a) 3,5,6,7
                12,10,9 => Numbers reverse from previous sequence a)
                
               
                
              
           
                
                    
                        exemplo) reduzir de 2 bytes para 1 byte
                                        65536  256
                  
                  
                  		First Byte		
                  	0
                  	
                  	1
                  		SeconByte = FirstByte Copy FirstByte or FirstByte, and then reverse it (01 -> 01)
                  	
            		0
            		
            		1		can revert binary numbers ( 0->1 , 1->0 , 0-> 1 , or just set the bits with leading ones those belong to second byte)
            				If leading zeros, then second byte = first byte
            		0
            		
            		1
            		
      					Third Byte = SecondByte copy SecondByte OR ThirdByte = Seocndbyte, instead of copyiong reverse it
      					
      				0
      				
      				1
      							Already assigned first two combinations of zeros and ones (4 combinations  2 zeros and ones)
      				0      				
      				
      				1
      				
      				0 
      				 			Set equal to the last numbers (starting from line 4) or reverse numbers
      				1 
      				
      				0 
      				
      				1	
      			
      				Assign first bit to 1 (2bytes-> pos(1),pos(4)  , 3bytes-> pos(1),pos4,pos 6 ,pos 8) need to copy byte to byte and then 
      				set 1 on leading positions  in even positions 
        
                	reversing leading bits faster than setting it?
      
            
                algorithm
                	copy first byte to all table
                   adicionar ones, to even positions.
                or set first byte, and do reverses.How many reverses needed for 2bytes for (16 reverses)
                
           

        

            
            
            
